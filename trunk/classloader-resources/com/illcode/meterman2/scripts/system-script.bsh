// bsh script to set up the system namespace

// out() and outPassage() are used in ScriptSource scripts to emit text
// that will be gathered and returned as the value of getText().

/**
 * Output a simple text string.
 * @param text text to output
 */
void out(String text) {
    outputBuilder.append(text);
}

/**
 * Output the text of a passage found in our bundle group.
 * @param id passage ID to output
 */
void outPassage(String id) {
    outputBuilder.append(bundles.getPassage(id).getText());
}

// The print() and println() methods call the equivalent GameManager methods.

/**
 * Print text to the main text area.
 */
void print(String text) {
    gm.print(text);
}

/**
 * Print text followed by a newline to the main text area.
 */
void println(String text) {
    gm.println(text);
}

// Bring the GameUtils defName() and indefName() methods into the namespace for easy use.

/**
 * Return the name of the entity prefixed by the definite article ("the"), taking into
 * account proper names.
 * @param e entity
 * @param capitalize whether to capitalize the definite article
 */
String defName(Entity e, boolean capitalize) {
    return GameUtils.defName(e, capitalize);
}

/**
 * Return the name of the entity prefixed by the definite article ("the") in lowercase,
 * taking into account proper names.
 * @param e entity
 */
String defName(Entity e) {
    return GameUtils.defName(e);
}

/**
 * Return the name of the entity prefixed by the indefinite article ("a/an/other"), taking into account
 * proper names. If {@code e.getIndefiniteArticle()} returns null, we use "an" for names that begin with
 * a vowel, and "a" otherwise.
 * @param e entity
 * @param capitalize whether to capitalize the indefinite article
 */
String indefName(Entity e, boolean capitalize) {
    return GameUtils.indefName(e, capitalize);
}

/** Return the name of the entity prefixed by the indefinite article ("a/an/other") in lowercase. */
String indefName(Entity e) {
    return GameUtils.indefName(e);
}
